SET DATABASE UNIQUE NAME HSQLDB3A683CB6AD
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REGULAR NAMES TRUE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL NULLS FIRST TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET DATABASE SQL LONGVAR IS LOB FALSE
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET FILES WRITE DELAY 500 MILLIS
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE MEMORY TABLE PUBLIC.BENCHMARK(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(256) NOT NULL,DESCRIPT VARCHAR(10240),RESULT VARCHAR(10240),UNIQUE(NAME))
ALTER TABLE PUBLIC.BENCHMARK ALTER COLUMN ID RESTART WITH 3
CREATE MEMORY TABLE PUBLIC.PATTERN(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(256) NOT NULL,EXPRESSION VARCHAR(10240) NOT NULL,WARNING VARCHAR(1024) NOT NULL,CATEGORY VARCHAR(80) NOT NULL,EXAMPLE VARCHAR(10240),SCOPE VARCHAR(40) DEFAULT 'inner-class' NOT NULL,PRIORITY INTEGER DEFAULT 3 NOT NULL,AUX VARCHAR(10240))
ALTER TABLE PUBLIC.PATTERN ALTER COLUMN ID RESTART WITH 18
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO BENCHMARK VALUES(1,'SetTester','Compare OP time between those two usage:\r\n\u0009Collections.synchronizedSet(new HashSet<String>());\r\n\u0009Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>());','Threads:100\r\nRepeats per Thread:50\r\nReadWrite Rate:1.00\r\nread for Collections.synchronizedSet(new HashSet<String>()): latency=3650.0ns, throughput=273972.602739726op/s\r\nwrite for Collections.synchronizedSet(new HashSet<String>()): latency=171.0ns, throughput=5847953.216374269op/s\r\nread for Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>()): latency=131.0ns, throughput=7633587.786259542op/s\r\nwrite for Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>()): latency=97.0ns, throughput=1.0309278350515464E7op/s\r\n')
INSERT INTO BENCHMARK VALUES(2,'LockTester','Compare OP time between those two usage:\r\n\u0009Collections.synchronizedSet(new HashSet<String>());\r\n\u0009Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>());','Threads:100\r\nRepeats per Thread:50\r\nReadWrite Rate:1.00\r\nread for Lock: latency=43024.0ns, throughput=23242.841204908887op/s\r\nwrite for Lock: latency=855.0ns, throughput=1169590.6432748537op/s\r\nread for Collections.synchronizedMap(new HashMap<String, Data>()): latency=573.0ns, throughput=1745200.6980802792op/s\r\nwrite for Collections.synchronizedMap(new HashMap<String, Data>()): latency=513.0ns, throughput=1949317.738791423op/s\r\n')
INSERT INTO PATTERN VALUES(1,'ProbeSizeOfArrayOrCollectionBeforeForStatement','//BlockStatement\u000a [\u000a     descendant::*/IfStatement/descendant::*[RelationalExpression]/descendant::*/Literal[@Image="0"]\u000a ]\u000a [\u000a     ends-with(descendant::*/IfStatement/descendant::*/Name/@Image,''.length'')\u000a ]\u000a [\u000a     starts-with(\u000a     descendant::*/IfStatement/descendant::*/Name/@Image,\u000a     concat(\u000a     preceding-sibling::*\u000a     [./LocalVariableDeclaration/Type/ReferenceType[@Array="true"]]\u000a     [count(./LocalVariableDeclaration/*/*/ArrayInitializer/*)=0]\u000a     /LocalVariableDeclaration/*/VariableDeclaratorId/@Image, ".")\u000a     )\u000a ]\u000a [\u000a     not(preceding-sibling::*[descendant::*/AssignmentOperator]) or\u000a     not(starts-with(\u000a     descendant::*/RelationalExpression/descendant::*/Name/@Image,\u000a     preceding-sibling::*[descendant::*/AssignmentOperator]\u000a     /descendant::*/PrimaryPrefix/Name/@Image))\u000a ]\u000a |\u000a //BlockStatement\u000a [\u000a     descendant::*/IfStatement/descendant::*[RelationalExpression]/descendant::*/Literal[@Image="0"]\u000a ]\u000a [\u000a     ends-with(descendant::*/IfStatement/descendant::*/Name/@Image,''.length'')\u000a ]\u000a [\u000a     starts-with(\u000a     descendant::*/IfStatement/descendant::*/Name/@Image,\u000a     concat(descendant::*/IfStatement/descendant::*/ForStatement/descendant::*/Name/@Image, ".")\u000a     )\u000a ]\u000a |\u000a //BlockStatement\u000a [\u000a ends-with(\u000a descendant::*/IfStatement/Expression//RelationalExpression[@Image=">"][PrimaryExpression/PrimaryPrefix/Literal[@Image="0"]]\u000a /PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount="0"]]/PrimaryPrefix/Name/@Image,''.size''\u000a )\u000a ]\u000a [\u000a starts-with(\u000a descendant::*/IfStatement/Expression//RelationalExpression[@Image=">"][PrimaryExpression/PrimaryPrefix/Literal[@Image="0"]]\u000a /PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount="0"]]/PrimaryPrefix/Name/@Image,\u000a concat(\u000a descendant::*/IfStatement/descendant::*/ForStatement/descendant::*/Name/@Image, ".")\u000a )\u000a ]','You''d better not probe the size of array or collection before For statement.','RedundantStatement','(1)public class ClassA{\u000a  \u0009void methodA() {\u000a  \u0009\u0009ClassA[] array = {};\u000a  \u0009\u0009if (array.length > 0) {\u000a  \u0009\u0009\u0009for (ClassA obj: array) {\u000a  \u0009\u0009\u0009\u0009//doSometing\u000a  \u0009\u0009\u0009}\u000a  \u0009\u0009}\u000a  \u0009}\u000a  }\u000a \u000a \u000a \uff082\uff09public class ClassA{\u000a   void methodA() {\u000a if (isNeedDeleteRememberMeCookie &amp;&amp; newCookies.size() > 0) {\u000a \u0009\u0009\u0009for (Cookie cookie : newCookies) {\u000a \u0009\u0009\u0009\u0009response.addCookie(cookie);\u000a \u0009\u0009\u0009}\u000a \u0009\u0009}\u000a  }\u000a }','inner-class',3,'')
INSERT INTO PATTERN VALUES(2,'UnnecessaryLogicalJudgement','//BlockStatement\u000a [\u000a     descendant::*/IfStatement/descendant::*[EqualityExpression]/descendant::*/Literal/NullLiteral\u000a ]\u000a [\u000a     descendant::*/IfStatement/descendant::*[EqualityExpression]/descendant::*/PrimaryPrefix/Name/@Image=\u000a preceding-sibling::*[descendant::*/AllocationExpression]/descendant::*/VariableDeclaratorId/@Image \u000a ]\u000a [\u000a     not(preceding-sibling::*[descendant::*/AssignmentOperator]) or\u000a     not(\u000a     descendant::*/IfStatement/descendant::*[EqualityExpression]/descendant::*/Name/@Image=\u000a     preceding-sibling::*[descendant::*/AssignmentOperator]\u000a     /descendant::*/PrimaryPrefix/Name/@Image)\u000a ]\u000a |\u000a //BlockStatement\u000a [\u000a   descendant::*/IfStatement/descendant::*/EqualityExpression[@Image="=="]\u000a \u0009[descendant::*/Literal/NullLiteral]/PrimaryExpression/PrimaryPrefix/Name/@Image=\u000a \u0009preceding-sibling::*/LocalVariableDeclaration/VariableDeclarator[descendant::*/Literal/NullLiteral]/VariableDeclaratorId/@Image\u000a ]\u000a |\u000a //BlockStatement\u000a [\u000a \u0009descendant::*/IfStatement/descendant::*/EqualityExpression[@Image="!="]\u000a \u0009[descendant::*/Literal/NullLiteral]/PrimaryExpression/PrimaryPrefix/Name/@Image=\u000a \u0009preceding-sibling::*/LocalVariableDeclaration/VariableDeclarator[not(descendant::*/Literal/NullLiteral)]/VariableDeclaratorId/@Image\u000a ]','There''s unnecessary logical judgement here.','RedundantStatement','public class ClassA{\u000a     void methodA() {\u000a       ClassA inst= new ClassA();\u000a       if (inst == null) {\u000a       //doSomething\u000a       }\u000a     }\u000a   }','inner-class',3,'')
INSERT INTO PATTERN VALUES(3,'ReclaimMemorySpace','//BlockStatement\u000a [Statement/StatementExpression/AssignmentOperator/following-sibling::*[self::Expression and position()=1]/PrimaryExpression/PrimaryPrefix/Literal/NullLiteral]\u000a [not(ancestor::*/following-sibling::*/descendant::*/PrimaryPrefix/Name/@Image=descendant::*/PrimaryPrefix/Name/@Image)]\u000a [not(following-sibling::*/descendant::*/PrimaryPrefix/Name/@Image=descendant::*/PrimaryPrefix/Name/@Image)]','It''s unnecessary to reclaim memory space here.','ExcessiveSynchronization','public class ClassA{\u000a  \u0009void methodA() {\u000a  \u0009\u0009ClassA inst = new ClassA();\u000a  \u0009\u0009// method body\u000a  \u0009\u0009inst = null;\u000a  \u0009}\u000a  }','inner-class',3,'')
INSERT INTO PATTERN VALUES(4,'CallSameFunctionTwiceOrMoreInMethod','//ClassOrInterfaceBodyDeclaration/descendant::*/BlockStatement\u000a[\u000adescendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image\u000a]/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name\u000a|\u000a//ClassOrInterfaceBodyDeclaration/descendant::*/BlockStatement\u000a[\u000adescendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@Image=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@Image\u000a]/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name','You''d better not call the same function twice or more times in a method.','RedundantInvocation','public class ClassA{\u000a  \u0009void methodA() {\u000a  \u0009\u0009ClassA inst = new ClassA();\u000a  \u0009\u0009one(inst.sum());\u000a  \u0009\u0009two(inst.sum());\u000a  \u0009\u0009three(inst.sum());\u000a  \u0009}\u000a  }','inner-class',2,'')
INSERT INTO PATTERN VALUES(5,'CallSameFunctionTwiceOrMoreInClass','//ClassOrInterfaceBodyDeclaration\u000a[\u000adescendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image=\u000apreceding-sibling::*/FieldDeclaration/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image\u000a]/descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name\u000a|\u000a//ClassOrInterfaceBodyDeclaration/descendant::*/BlockStatement\u000a[\u000adescendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image\u000a]/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name\u000a|\u000a//ClassOrInterfaceBodyDeclaration\u000a[\u000adescendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image=\u000apreceding-sibling::*/FieldDeclaration/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image\u000a]\u000a[\u000adescendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal[not(@Image="")]/@Image=\u000apreceding-sibling::*/FieldDeclaration/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal[not(@Image="")]/@Image\u000a]/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name\u000a|\u000a//ClassOrInterfaceBodyDeclaration/descendant::*/BlockStatement\u000a[\u000adescendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal[not(@Image="")]/@Image=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal[not(@Image="")]/@Image\u000a]/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name','You''d better not call the same function twice or more times in a class.','RedundantInvocation','public class ClassA{\u000a  \u0009void methodA() {\u000a     \u0009\u0009HandlerFactory hf = HandlerFactory.getInstance().getHandler("A");\u000a  \u0009}\u000a  \u0009void methodB() {\u000a  \u0009\u0009HandlerFactory hf = HandlerFactory.getInstance().getHandler("A");\u000a  \u0009}\u000a  }','inner-class',4,'')
INSERT INTO PATTERN VALUES(6,'SuboptimalLogicalExpression','//Expression\u000a [\u000a     ConditionalAndExpression\u000a     [\u000a         count(descendant::UnaryExpressionNotPlusMinus[@Image="!"])>1\u000a     ]\u000a     or AndExpression\u000a     [\u000a         count(descendant::UnaryExpressionNotPlusMinus[@Image="!"])>1\u000a     ]\u000a         or ConditionalOrExpression\u000a     [\u000a         count(descendant::UnaryExpressionNotPlusMinus[@Image="!"])>1\u000a     ]\u000a     or InclusiveOrExpression\u000a     [\u000a         count(descendant::UnaryExpressionNotPlusMinus[@Image="!"])>1\u000a     ]\u000a ]','There''re some suboptimal logical expressions.','SuboptimalStatement','public class ClassA{\u000a  \u0009void methodA() {\u000a  \u0009\u0009if (!A && !B && !C && !D) {\u000a  \u0009\u0009\u0009//doSomething\u000a  \u0009\u0009}\u000a  \u0009}\u000a  }','inner-class',3,'')
INSERT INTO PATTERN VALUES(7,'OperateUnsynchronizedCollection','//ClassOrInterfaceBodyDeclaration\u000a [FieldDeclaration[descendant::*/ClassOrInterfaceType[@Image="Map"]]\u000a /VariableDeclarator[descendant::*/AllocationExpression/ClassOrInterfaceType[@Image="HashMap"]]/VariableDeclaratorId\u000a ]\u000a [\u000a following-sibling::*\u000a [self::ClassOrInterfaceBodyDeclaration]\u000a [descendant::*/PrimaryExpression/PrimarySuffix[@Image="putAll"]]\u000a /descendant::*/PrimaryExpression[PrimarySuffix[@Image="putAll"]]/PrimarySuffix/@Image\u000a =\u000a FieldDeclaration[descendant::*/ClassOrInterfaceType[@Image="Map"]]\u000a /VariableDeclarator[descendant::*/AllocationExpression/ClassOrInterfaceType[@Image="HashMap"]]/VariableDeclaratorId/@Image\u000a ]\u000a |\u000a //ClassOrInterfaceBodyDeclaration\u000a [FieldDeclaration[descendant::*/ClassOrInterfaceType[@Image="Map"]]\u000a /VariableDeclarator[descendant::*/AllocationExpression/ClassOrInterfaceType[@Image="HashMap"]]/VariableDeclaratorId\u000a ]\u000a [\u000a starts-with(\u000a following-sibling::*\u000a [self::ClassOrInterfaceBodyDeclaration]\u000a [descendant::*/PrimaryExpression/PrimaryPrefix/Name[ends-with(@Image,".putAll")]]\u000a /descendant::*/PrimaryExpression/PrimaryPrefix/Name[ends-with(@Image,".putAll")]/@Image\u000a ,\u000a FieldDeclaration[descendant::*/ClassOrInterfaceType[@Image="Map"]]\u000a /VariableDeclarator[descendant::*/AllocationExpression/ClassOrInterfaceType[@Image="HashMap"]]/VariableDeclaratorId/@Image\u000a )\u000a ]\u000a |\u000a //ClassOrInterfaceBodyDeclaration\u000a [not(\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Set"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableDeclaratorId/@Image\u000a =following-sibling::*[ConstructorDeclaration]/descendant::*/StatementExpression\u000a [Expression/PrimaryExpression/PrimarySuffix/Arguments[@ArgumentCount=1]/\u000a descendant::*/ClassOrInterfaceType[@Image="ConcurrentHashMap"]/TypeArguments\u000a ]\u000a /PrimaryExpression/PrimaryPrefix/Name/@Image)\u000a ]\u000a [\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Set"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableDeclaratorId/@Image\u000a =following-sibling::*[ConstructorDeclaration]/descendant::*/StatementExpression\u000a [Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression/ClassOrInterfaceType]\u000a /PrimaryExpression/PrimaryPrefix/Name/@Image\u000a ]\u000a [\u000a following-sibling::*\u000a [MethodDeclaration]\u000a [count(descendant::*[@Synchronized="true"])=0]\u000a [count(descendant::*/SynchronizedStatement)=0]\u000a /descendant::*/Name/@Image=concat(FieldDeclaration/VariableDeclarator/VariableDeclaratorId/@Image, ".add")\u000a ]\u000a |\u000a //ClassOrInterfaceBodyDeclaration\u000a [not(\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="List"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableDeclaratorId/@Image\u000a =following-sibling::*[ConstructorDeclaration]/descendant::*/StatementExpression\u000a [Expression/PrimaryExpression\u000a [PrimarySuffix/Arguments[@ArgumentCount=1]]\u000a /PrimaryPrefix/Name[@Image="Collections.synchronizedList"]]\u000a /PrimaryExpression/PrimaryPrefix/Name/@Image)\u000a ]\u000a [\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="List"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableDeclaratorId/@Image\u000a =following-sibling::*[ConstructorDeclaration]/descendant::*/StatementExpression\u000a [Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression/ClassOrInterfaceType]\u000a /PrimaryExpression/PrimaryPrefix/Name/@Image\u000a ]\u000a [\u000a following-sibling::*\u000a [MethodDeclaration]\u000a [count(descendant::*[@Synchronized="true"])=0]\u000a [count(descendant::*/SynchronizedStatement)=0]\u000a /descendant::*/Name/@Image=concat(FieldDeclaration/VariableDeclarator/VariableDeclaratorId/@Image, ".add")\u000a ]\u000a |\u000a //ClassOrInterfaceBodyDeclaration\u000a [not(\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Map"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableDeclaratorId/@Image\u000a =following-sibling::*[ConstructorDeclaration]/descendant::*/StatementExpression\u000a [Expression/PrimaryExpression\u000a [PrimarySuffix/Arguments[@ArgumentCount=1]]\u000a /PrimaryPrefix/Name[@Image="Collections.synchronizedMap"]]\u000a /PrimaryExpression/PrimaryPrefix/Name/@Image)\u000a ]\u000a [\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Map"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableDeclaratorId/@Image\u000a =following-sibling::*[ConstructorDeclaration]/descendant::*/StatementExpression\u000a [Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression/ClassOrInterfaceType]\u000a /PrimaryExpression/PrimaryPrefix/Name/@Image\u000a ]\u000a [\u000a following-sibling::*\u000a [MethodDeclaration]\u000a [count(descendant::*[@Synchronized="true"])=0]\u000a [count(descendant::*/SynchronizedStatement)=0]\u000a /descendant::*/Name/@Image=concat(FieldDeclaration/VariableDeclarator/VariableDeclaratorId/@Image, ".put")\u000a ]\u000a |\u000a //ClassOrInterfaceBodyDeclaration\u000a [not(\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Set"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableInitializer/\u000a Expression/PrimaryExpression/PrimarySuffix/Arguments[@ArgumentCount=1]/\u000a descendant::*/ClassOrInterfaceType[@Image="ConcurrentHashMap"]/TypeArguments)\u000a ]\u000a [\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Set"]/descendant::*/TypeArgument]\u000a /VariableDeclarator/VariableInitializer/Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression\u000a ]\u000a [\u000a following-sibling::*\u000a [MethodDeclaration]\u000a [count(descendant::*[@Synchronized="true"])=0]\u000a [count(descendant::*/SynchronizedStatement)=0]\u000a /descendant::*/Name/@Image=concat(FieldDeclaration/VariableDeclarator/VariableDeclaratorId/@Image, ".add")\u000a ]\u000a |\u000a //ClassOrInterfaceBodyDeclaration\u000a [not(\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="List"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableInitializer/\u000a Expression/PrimaryExpression[PrimaryPrefix/Name[@Image="Collections.synchronizedList"]]/PrimarySuffix/Arguments)\u000a ]\u000a [\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="List"]/descendant::*/TypeArgument]\u000a /VariableDeclarator/VariableInitializer/Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression\u000a ]\u000a [\u000a following-sibling::*\u000a [MethodDeclaration]\u000a [count(descendant::*[@Synchronized="true"])=0]\u000a [count(descendant::*/SynchronizedStatement)=0]\u000a /descendant::*/Name/@Image=concat(FieldDeclaration/VariableDeclarator/VariableDeclaratorId/@Image, ".add")\u000a ]\u000a |\u000a //ClassOrInterfaceBodyDeclaration\u000a [not(\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Map"]\u000a /descendant::*/TypeArgument]/VariableDeclarator/VariableInitializer/\u000a Expression/PrimaryExpression[PrimaryPrefix/Name[@Image="Collections.synchronizedMap"]]/PrimarySuffix/Arguments)\u000a ]\u000a [\u000a FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Map"]/descendant::*/TypeArgument]\u000a /VariableDeclarator/VariableInitializer/Expression/PrimaryExpression/PrimaryPrefix/AllocationExpression\u000a ]\u000a [\u000a following-sibling::*\u000a [MethodDeclaration]\u000a [count(descendant::*[@Synchronized="true"])=0]\u000a [count(descendant::*/SynchronizedStatement)=0]\u000a /descendant::*/Name/@Image=concat(FieldDeclaration/VariableDeclarator/VariableDeclaratorId/@Image, ".put")\u000a ]','There''s no synchronized collection for doing some operations. ','UnsafeDataAccess','public class KeyHolder{\u000a  \u0009private Set<key> keys= new HashSet<key>();\u000a          private static int size = 500;\u000a          public void put(String key) {\u000a               int less = keys.size() - size;\u000a               for (Key key: keys) {\u000a                    if (less-- <= 0) break;\u000a                    keys.remove(key);\u000a                    \u000a               }\u000a               keys.add(key);\u000a          }\u000a  }','inner-class',1,'')
INSERT INTO PATTERN VALUES(8,'LegacyUsageForLoop','//BlockStatement\u000a [\u000a     ends-with(descendant::*/ForStatement/descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount="1"]]/PrimaryPrefix/Name/@Image,''.get'')\u000a ]\u000a [\u000a     starts-with(\u000a     descendant::*/ForStatement/descendant::*/BlockStatement/descendant::*/PrimaryPrefix/Name/@Image,\u000a     concat(preceding-sibling::*/LocalVariableDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image=''List'' or @Image=''Set'']]/VariableDeclarator/VariableDeclaratorId/@Image, ".")\u000a     )\u000a ]\u000a |\u000a //BlockStatement\u000a [\u000a starts-with(descendant::*/ForStatement/Expression\u000a /RelationalExpression/PrimaryExpression[2]/PrimaryPrefix/Name/@Image,\u000a previous-sibiling/LocalVariableDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="String"]]/VariableDeclarator/VariableDeclaratorId/@Image)\u000a ]\u000a [\u000a starts-with(descendant::*/ForStatement/Expression\u000a /RelationalExpression/PrimaryExpression[2]/PrimaryPrefix/Name/@Image,\u000a descendant::*/ForStatement/Statement/descendant::*/PrimaryExpression/PrimaryPrefix/Name/@Image)\u000a ]\u000a [\u000a ends-with(descendant::*/ForStatement/Expression\u000a /RelationalExpression/PrimaryExpression[2]/PrimaryPrefix/Name/@Image,".length")\u000a ]\u000a |\u000a //BlockStatement\u000a [starts-with(descendant::*/VariableDeclarator\u000a /descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,\u000a previous-sibling/LocalVariableDeclaration[Type/descendant::*/ClassOrInterfaceType[@Image="List"]\u000a /TypeArguments]/VariableDeclarator/VariableDeclaratorId/@Image\u000a )]\u000a [ends-with(descendant::*/VariableDeclarator\u000a /descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,''.iterator''\u000a )]\u000a /following-sibling::*\u000a [ends-with(\u000a descendant::*/WhileStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,''.hasNext''\u000a )]\u000a [starts-with(\u000a descendant::*/WhileStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,\u000a LocalVariableDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Iterator"]]/VariableDeclarator/VariableDeclaratorId/@Image\u000a )]\u000a [1]\u000a |\u000a //BlockStatement\u000a [ends-with(descendant::*/StatementExpression\u000a /Expression/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,''.iterator''\u000a )]\u000a [starts-with(descendant::*/StatementExpression\u000a /Expression/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,\u000a previous-sibling/LocalVariableDeclaration[Type/descendant::*/ClassOrInterfaceType[@Image="Set"]\u000a /TypeArguments]/VariableDeclarator/VariableDeclaratorId/@Image\u000a )]\u000a /following-sibling::*\u000a [ends-with(\u000a descendant::*/WhileStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,''.hasNext''\u000a )]\u000a [starts-with(\u000a descendant::*/WhileStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryPrefix/Name/@Image,\u000a descendant::*/StatementExpression[Expression/PrimaryExpression/PrimarySuffix/Arguments[@ArgumentCount=0]]/PrimaryExpression/PrimaryPrefix/Name/@Image\u000a )]\u000a [1]','You''d better not use legacy of For loop.','SuboptimalStatement','(1)public class ClassA{\u000a  \u0009void methodA() {\u000a  \u0009\u0009List queue = new ArrayList();\u000a  \u0009\u0009int size = queue.size();\u000a  \u0009\u0009for (int i=0; i< size; i++) {\u000a  \u0009\u0009\u0009ClassA inst = (ClassA) queue.get(i);\u000a  \u0009\u0009}\u000a  \u0009}\u000a  }\u000a \u000a \u000a (2)class A{\u000a public JSONObject toJSON() throws JSONException {\u000a Iterator<string> candidatesIterator = this.getCandidates().keySet().iterator();\u000a     \u0009JSONObject jsonCandidates = new JSONObject();\u000a     \u0009while(candidatesIterator.hasNext()){\u000a     \u0009\u0009String key = candidatesIterator.next();\u000a     \u0009\u0009jsonCandidates.put(key, this.getCandidates().get(key).toJSON());\u000a     \u0009}\u000a    }\u000a }','inner-class',2,'')
INSERT INTO PATTERN VALUES(9,'UnspecifyTargetTypeInArrayConversion','//CastExpression[Type/ReferenceType/ClassOrInterfaceType[@Image != "Object"]]//PrimaryExpression\u000a [\u000a PrimaryPrefix/Name[ends-with(@Image, ''.toArray'')]\u000a and\u000a PrimarySuffix/Arguments[count(*) = 0]\u000a and\u000a count(PrimarySuffix) = 1\u000a ]','You''d better specify target type in array conversion.','UnsafeDataAccess','public class ClassA{\u000a  \u0009public void doSomething() {\u000a  \u0009\u0009Integer[] a = (Integer [])c.toArray();\u000a  \u0009}\u000a  }','inner-class',2,'')
INSERT INTO PATTERN VALUES(10,'ExpensiveOperationsInSynchronizedBlock','//ClassOrInterfaceBodyDeclaration\u000a[\u000adescendant::*/BlockStatement/Statement/SynchronizedStatement\u000a[\u000adescendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimaryPrefix/Name[##AUX##]]/PrimarySuffix/Arguments[@ArgumentCount>=0]\u000a]\u000a/Expression/PrimaryExpression/PrimaryPrefix/Name/@Image=\u000apreceding-sibling::*/FieldDeclaration[Type/ReferenceType/ClassOrInterfaceType[@Image="Map" or @Image="Set" or @Image="List"]/TypeArguments]/VariableDeclarator/VariableDeclaratorId/@Image\u000a]\u000a/MethodDeclaration/MethodDeclarator','There''re some expensive operations in synchronized block.','ExcessiveSynchronization','public class ClassA{\u000a  \u0009private Map<key,value> mapper = new HashMap<key, value="">();\u000a  \u0009public void put(Key k, Value v) {\u000a  \u0009\u0009synchronized(mapper) {\u000a  \u0009\u0009\u0009mapper.put(k,v);\u000a  \u0009\u0009\u0009processItem(k, v);\u000a                  }\u000a          }\u000a  }','inner-class',1,'costMethod,processItem')
INSERT INTO PATTERN VALUES(11,'SynchronizeCollectionWithLockVariable','//ClassOrInterfaceBodyDeclaration\u000a [\u000a starts-with(MethodDeclaration/descendant::*/BlockStatement\u000a [ends-with(preceding-sibling::*/descendant::*/PrimaryExpression[PrimarySuffix/Arguments]/PrimaryPrefix/Name/@Image,''.lock'')]\u000a /descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments]/PrimaryPrefix/Name/@Image,\u000a concat(preceding-sibling::*/FieldDeclaration[descendant::*/ClassOrInterfaceType[@Image="Map" or @Image="Set" or @Image="List"]]/descendant::*/VariableDeclaratorId/@Image,''.''))\u000a ]\u000a/MethodDeclaration/MethodDeclarator','You''d better use synchronize collection with lock variables.','ExcessiveSynchronization','class RWDictionary {\u000a      private final Map<string, data=""> m = new HashMap<string, data="">();\u000a      private final ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();\u000a      private final Lock r = rwl.readLock();\u000a      private final Lock w = rwl.writeLock();\u000a  \u000a      public Data get(String key) {\u000a          r.lock();\u000a          try { return m.get(key); }\u000a          finally { r.unlock(); }\u000a      }\u000a      public String[] allKeys() {\u000a          r.lock();\u000a          try { return m.keySet().toArray(); }\u000a          finally { r.unlock(); }\u000a      }\u000a      public Data put(String key, Data value) {\u000a          w.lock();\u000a          try { return m.put(key, value); }\u000a          finally { w.unlock(); }\u000a      }\u000a      public void clear() {\u000a          w.lock();\u000a          try { m.clear(); }\u000a          finally { w.unlock(); }\u000a      }\u000a   }','inner-class',1,'')
INSERT INTO PATTERN VALUES(12,'UseSynchronizedSet','//BlockStatement/descendant::*/PrimaryExpression\u000a [starts-with(PrimaryPrefix/Name/@Image,''Collections.'')]\u000a [ends-with(PrimaryPrefix/Name/@Image,''.synchronizedSet'')]\u000a [PrimarySuffix/Arguments[@ArgumentCount="1"]/ArgumentList/descendant::*/\u000a AllocationExpression[ClassOrInterfaceType[@Image="HashSet"]]/Arguments[@ArgumentCount="0"]]','You''d better use ConcurrentHashMap instead of SynchronizedSet.','ExcessiveSynchronization','public class ClassA{\u000a  \u0009void methodA() {\u000a  \u0009\u0009Set safeSet= Collections.synchronizedSet(new HashSet());\u000a                 Set safeSet2=Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>());\u000a  \u0009}\u000a  }','inner-class',1,'')
INSERT INTO PATTERN VALUES(13,'CallCombinativeFunctionTwiceOrMore','//Statement[ForStatement]\u000a[\u000adescendant::*/Statement[descendant::*/BlockStatement/descendant::*/PrimaryExpression\u000a[PrimaryPrefix/Name[##AUX##]]\u000a/PrimarySuffix/Arguments[@ArgumentCount="1"]/ArgumentList/descendant::*/PrimaryPrefix/Name/@Image=\u000aancestor::*/ForStatement/LocalVariableDeclaration/VariableDeclarator/VariableDeclaratorId/@Image]\u000a]\u000a|\u000a//ClassOrInterfaceBodyDeclaration/descendant::*/BlockStatement\u000a[\u000adescendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name[##AUX##]/@Image=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@IntLiteral=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@IntLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@FloatLiteral=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@FloatLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@CharLiteral=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@CharLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@StringLiteral=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@StringLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@SingleCharacterStringLiteral=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@SingleCharacterStringLiteral\u000a]\u000a[not(\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@Image=\u000apreceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@Image)\u000a]\u000a|\u000a//ClassOrInterfaceBodyDeclaration/descendant::*/BlockStatement\u000a[\u000adescendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name[##AUX##]/@Image=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount>0]]/PrimaryPrefix/Name/@Image\u000a]\u000a[not(\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal[not(@Image="")]/@Image=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/BlockStatement/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal[not(@Image="")]/@Image)\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@IntLiteral=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@IntLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@FloatLiteral=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@FloatLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@CharLiteral=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@CharLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@StringLiteral=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@StringLiteral\u000a]\u000a[\u000adescendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@SingleCharacterStringLiteral=\u000aancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/PrimaryExpression[PrimaryPrefix/Name]/PrimarySuffix/Arguments[@ArgumentCount>0]\u000a/ArgumentList/Expression/PrimaryExpression/PrimaryPrefix/Literal/@SingleCharacterStringLiteral\u000a]','It''ll call combinative function twice Or more times.','SuboptimalStatement','(1)public class ClassA{\u000a  \u0009public void methodA() {\u000a  \u0009\u0009serviceA.call(url1);\u000a  \u0009\u0009serviceA.call(url2);\u000a  \u0009\u0009methodB();\u000a  \u0009}\u000a  \u0009public void methodB() {\u000a  \u0009\u0009serviceA.call(url3);\u000a  \u0009\u0009serviceA.call(url4);\u000a  \u0009}\u000a  }\u000a(2)public class ClassA{\u000a\u0009public void methodA() {\u000a\u0009\u0009for (String key: keys) {\u000a\u0009\u0009\u0009ClassA curRow = DBManager.getRowByID(key);\u000a\u0009\u0009\u0009processRow(curRow);\u000a\u0009\u0009}\u000a\u0009}\u000a}','inner-class',1,'cominativeMethod,serviceA.call,processRow')
INSERT INTO PATTERN VALUES(14,'ComputationalComplexityProblem','//BlockStatement\u000a [count(\u000a Statement[ForStatement or WhileStatement or DoStatement]\u000a /descendant::*/Statement[ForStatement or WhileStatement or DoStatement]\u000a )>0]','It  will cause the high computational time complexity.','SuboptimalStatement','public class ClassA{\u000a  \u0009public void doSomething() {\u000a  \u0009\u0009int size = 100;\u000a  \u0009\u0009for (int i=0; i< size; i++) {\u000a  \u0009\u0009\u0009for (int j=0; j< size; j++){\u000a  \u0009\u0009\u0009\u0009//doSomething\u000a  \u0009\u0009\u0009}\u000a  \u0009\u0009}\u000a  \u0009}\u000a  }','inner-class',1,'')
