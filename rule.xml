<?xml version="1.0"?> <ruleset name="jcpa pmd rules" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd" xsi:noNamespaceSchemaLocation="http://pmd.sourceforge.net/ruleset_2_0_0.xsd"><description>jcpa pmd rules[generate by admin at the time of 2012.11.17 09:58:11]</description><rule name="CallSameFunctionTwiceOrMoreInMethod" language="java" since="5.0" scope="inner-class" message="" class="net.sourceforge.pmd.rules.XPathRule" externalInfoUrl="pattern.jsp?id=4"><description>You'd better not call the same function twice or more times in a method.</description><priority>2</priority><properties><property name="xpath"><value><![CDATA[//PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]][ancestor::*/ArgumentList][    ancestor::*[self::BlockStatement]    /preceding-sibling::*/descendant::*/    PrimarySuffix/Arguments[@ArgumentCount=0]    [ancestor::*/ArgumentList]    /../../PrimaryPrefix/Name/@Image = ./PrimaryPrefix/Name/@Image]]]></value></property></properties><example><![CDATA[public class CallSameFunctionTwiceOrMoreInMethod {     private long f(long n) {         if (n == 1) {             return 1;         } else {             return n * f(n - 1);         }     }      public long correctCallFunctions() {         long part1 = f(4);         long part2 = f(5);         return part1 + part2;     }      public long wrongCallFunctions() {         long part1 = f(6);         long part2 = f(6);         return part1 + part2;     }}]]></example></rule><rule name="CallSameFunctionTwiceOrMoreInClass" language="java" since="5.0" scope="inner-class" message="" class="net.sourceforge.pmd.rules.XPathRule" externalInfoUrl="pattern.jsp?id=5"><description>You'd better not call the same function twice or more times in a class.</description><priority>4</priority><properties><property name="xpath"><value><![CDATA[//PrimaryExpression[PrimarySuffix/Arguments[@ArgumentCount=0]][ancestor::*/VariableInitializer][    ancestor::*[self::ClassOrInterfaceBodyDeclaration]/preceding-sibling::*/descendant::*/PrimaryExpression    [PrimarySuffix/Arguments[@ArgumentCount=0]]    [        PrimaryPrefix/Name/@Image=./PrimaryPrefix/Name/@Image        and PrimarySuffix/@Image=./PrimarySuffix/@Image        and PrimarySuffix/Arguments[@ArgumentCount=1]/ArgumentList/descendant::*/PrimaryPrefix/Literal/@Image=        ./PrimarySuffix/Arguments[@ArgumentCount=1]/ArgumentList/descendant::*/PrimaryPrefix/Literal/@Image    ]]]]></value></property></properties><example><![CDATA[public class CallSameFunctionTwiceOrMoreInClass {      MethodFactory mf = MethodFactory.getInstance();      String correctGetRed() {         return mf.getColor(true);     }      String correctGetGray() {         return mf.getColor(false);     }          String wrongGetRed() {         return MethodFactory.getInstance().getColor(true);     }      String WrongGetGray() {         return MethodFactory.getInstance().getColor(false);     }  }]]></example></rule></ruleset>